2025-06-27 12:47:37.250 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - null null
2025-06-27 12:47:37.376 +05:30 [INF] CORS policy execution failed.
2025-06-27 12:47:37.384 +05:30 [INF] Request origin http://localhost:56000 does not have permission to access the resource.
2025-06-27 12:47:37.386 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - 204 null null 139.2026ms
2025-06-27 12:47:48.215 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - null null
2025-06-27 12:47:48.219 +05:30 [INF] CORS policy execution failed.
2025-06-27 12:47:48.221 +05:30 [INF] Request origin http://localhost:56000 does not have permission to access the resource.
2025-06-27 12:47:48.225 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - 204 null null 10.3996ms
2025-06-27 12:48:29.639 +05:30 [INF] Application is shutting down...
2025-06-27 12:48:44.662 +05:30 [INF] User profile is available. Using 'C:\Users\imkis\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-27 12:48:44.812 +05:30 [INF] Now listening on: http://localhost:5147
2025-06-27 12:48:44.819 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-06-27 12:48:44.821 +05:30 [INF] Hosting environment: Development
2025-06-27 12:48:44.823 +05:30 [INF] Content root path: D:\training\BloggingPlatform
2025-06-27 12:51:05.222 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - null null
2025-06-27 12:51:05.283 +05:30 [WRN] Failed to determine the https port for redirect.
2025-06-27 12:51:05.286 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:05.300 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - 204 null null 78.7949ms
2025-06-27 12:51:05.317 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5147/api/v1/login - application/json 50
2025-06-27 12:51:05.326 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:05.378 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform)'
2025-06-27 12:51:05.418 +05:30 [INF] Route matched with {action = "UserLogin", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[BloggingPlatform.Dto.User.UserLoginResponse]] UserLogin(BloggingPlatform.Models.DTOs.UserLoginRequest) on controller BloggingPlatform.Controllers.AuthenticationController (bloggingplatform).
2025-06-27 12:51:07.234 +05:30 [INF] Executed DbCommand (47ms) [Parameters=[@__email_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
FROM "Users" AS u
WHERE u."Email" = @__email_0 AND NOT (u."IsDeleted") AND NOT (u."IsSuspended")
LIMIT 1
2025-06-27 12:51:07.264 +05:30 [FTL] User not found
2025-06-27 12:51:07.268 +05:30 [ERR] No such user
2025-06-27 12:51:07.277 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2025-06-27 12:51:07.286 +05:30 [INF] Executed action BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform) in 1863.0359ms
2025-06-27 12:51:07.290 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform)'
2025-06-27 12:51:07.295 +05:30 [INF] HTTP POST /api/v1/login responded 401 in 1959.4953 ms
2025-06-27 12:51:07.301 +05:30 [INF] HTTP POST /api/v1/login responded 401 in 1966ms - User: Anonymous
2025-06-27 12:51:07.320 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5147/api/v1/login - 401 null text/plain; charset=utf-8 2002.9222ms
2025-06-27 12:51:22.425 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - null null
2025-06-27 12:51:22.434 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:22.437 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - 204 null null 11.5996ms
2025-06-27 12:51:22.442 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5147/api/v1/login - application/json 46
2025-06-27 12:51:22.446 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:22.449 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform)'
2025-06-27 12:51:22.452 +05:30 [INF] Route matched with {action = "UserLogin", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[BloggingPlatform.Dto.User.UserLoginResponse]] UserLogin(BloggingPlatform.Models.DTOs.UserLoginRequest) on controller BloggingPlatform.Controllers.AuthenticationController (bloggingplatform).
2025-06-27 12:51:22.488 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
FROM "Users" AS u
WHERE u."Email" = @__email_0 AND NOT (u."IsDeleted") AND NOT (u."IsSuspended")
LIMIT 1
2025-06-27 12:51:22.492 +05:30 [FTL] User not found
2025-06-27 12:51:22.493 +05:30 [ERR] No such user
2025-06-27 12:51:22.495 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2025-06-27 12:51:22.499 +05:30 [INF] Executed action BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform) in 44.9536ms
2025-06-27 12:51:22.501 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform)'
2025-06-27 12:51:22.502 +05:30 [INF] HTTP POST /api/v1/login responded 401 in 55.2836 ms
2025-06-27 12:51:22.505 +05:30 [INF] HTTP POST /api/v1/login responded 401 in 58ms - User: Anonymous
2025-06-27 12:51:22.508 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5147/api/v1/login - 401 null text/plain; charset=utf-8 65.7768ms
2025-06-27 12:51:30.939 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - null null
2025-06-27 12:51:30.952 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:30.955 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - 204 null null 20.5562ms
2025-06-27 12:51:30.960 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5147/api/v1/login - application/json 47
2025-06-27 12:51:30.963 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:31.015 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform)'
2025-06-27 12:51:31.016 +05:30 [INF] Route matched with {action = "UserLogin", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[BloggingPlatform.Dto.User.UserLoginResponse]] UserLogin(BloggingPlatform.Models.DTOs.UserLoginRequest) on controller BloggingPlatform.Controllers.AuthenticationController (bloggingplatform).
2025-06-27 12:51:31.152 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
FROM "Users" AS u
WHERE u."Email" = @__email_0 AND NOT (u."IsDeleted") AND NOT (u."IsSuspended")
LIMIT 1
2025-06-27 12:51:31.695 +05:30 [INF] Login attempt: kishore@gmail.com
2025-06-27 12:51:31.696 +05:30 [INF] User found: True
2025-06-27 12:51:31.697 +05:30 [INF] Password valid: True
2025-06-27 12:51:31.898 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?', @p4='?', @p5='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "Expires", "IsRevoked", "Token", "UserEmail", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-06-27 12:51:31.912 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Dto.User.UserLoginResponse'.
2025-06-27 12:51:31.932 +05:30 [INF] Executed action BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform) in 914.4208ms
2025-06-27 12:51:31.934 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform)'
2025-06-27 12:51:31.937 +05:30 [INF] HTTP POST /api/v1/login responded 200 in 970.0473 ms
2025-06-27 12:51:31.939 +05:30 [INF] HTTP POST /api/v1/login responded 200 in 972ms - User: Anonymous
2025-06-27 12:51:31.942 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5147/api/v1/login - 200 null application/json; charset=utf-8 982.122ms
2025-06-27 12:51:35.667 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 12:51:35.671 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:35.673 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.6361ms
2025-06-27 12:51:35.679 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 12:51:35.684 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:35.740 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 12:51:35.754 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:51:36.061 +05:30 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-27 12:51:36.165 +05:30 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 12:51:36.340 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:51:37.297 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1539.6069ms
2025-06-27 12:51:37.298 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 12:51:37.301 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1615.8349 ms
2025-06-27 12:51:37.304 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1618ms - User: kishore
2025-06-27 12:51:37.307 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1627.4291ms
2025-06-27 12:51:46.151 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 12:51:46.156 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:46.157 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.7469ms
2025-06-27 12:51:46.166 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 12:51:46.217 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:51:46.221 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 12:51:46.223 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:51:46.270 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 12:51:46.314 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:51:47.065 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 829.7438ms
2025-06-27 12:51:47.074 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 12:51:47.081 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 862.9726 ms
2025-06-27 12:51:47.084 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 865ms - User: kishore
2025-06-27 12:51:47.087 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 920.7926ms
2025-06-27 12:52:04.077 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 - null null
2025-06-27 12:52:04.079 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:04.081 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 - 204 null null 4.0696ms
2025-06-27 12:52:04.085 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 - null null
2025-06-27 12:52:04.095 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:04.097 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 12:52:04.109 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:52:04.140 +05:30 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-27 12:52:04.192 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 12:52:04.215 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 12:52:04.238 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 12:52:04.243 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 12:52:04.329 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 217.3559ms
2025-06-27 12:52:04.331 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 12:52:04.332 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 responded 200 in 235.7135 ms
2025-06-27 12:52:04.334 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 responded 200 in 237ms - User: kishore
2025-06-27 12:52:04.335 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 - 200 null application/json; charset=utf-8 250.3676ms
2025-06-27 12:52:04.385 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments - null null
2025-06-27 12:52:04.388 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:04.390 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments - 204 null null 4.8374ms
2025-06-27 12:52:04.390 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images - null null
2025-06-27 12:52:04.392 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes - null null
2025-06-27 12:52:04.394 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments - null null
2025-06-27 12:52:04.400 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:04.403 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:04.404 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:04.405 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images - 204 null null 15.0277ms
2025-06-27 12:52:04.406 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes - 204 null null 14.5182ms
2025-06-27 12:52:04.407 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform)'
2025-06-27 12:52:04.410 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes - null null
2025-06-27 12:52:04.414 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images - null null
2025-06-27 12:52:04.420 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:04.420 +05:30 [INF] Route matched with {action = "GetCommentsByPost", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCommentsByPost(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:52:04.423 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:04.424 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform)'
2025-06-27 12:52:04.444 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform)'
2025-06-27 12:52:04.446 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 12:52:04.449 +05:30 [INF] Route matched with {action = "GetLikesByPostId", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetLikesByPostId(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:52:04.452 +05:30 [INF] Route matched with {action = "GetImagesByPost", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetImagesByPost(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:52:04.460 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 12:52:04.465 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Like, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:52:04.466 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
FROM "Comments" AS c
WHERE NOT (c."IsDeleted")
2025-06-27 12:52:04.467 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform) in 14.5721ms
2025-06-27 12:52:04.471 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Comment, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:52:04.472 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform)'
2025-06-27 12:52:04.475 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes responded 200 in 50.4850 ms
2025-06-27 12:52:04.480 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes responded 200 in 55ms - User: kishore
2025-06-27 12:52:04.482 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes - 200 null application/json; charset=utf-8 71.9391ms
2025-06-27 12:52:04.488 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform) in 47.1006ms
2025-06-27 12:52:04.494 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform)'
2025-06-27 12:52:04.496 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments responded 200 in 89.0815 ms
2025-06-27 12:52:04.498 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments responded 200 in 90ms - User: kishore
2025-06-27 12:52:04.501 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments - 200 null application/json; charset=utf-8 106.1733ms
2025-06-27 12:52:04.560 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 12:52:04.571 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 12:52:04.583 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Image, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:52:04.594 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform) in 133.2574ms
2025-06-27 12:52:04.595 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform)'
2025-06-27 12:52:04.597 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images responded 200 in 153.6045 ms
2025-06-27 12:52:04.602 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images responded 200 in 157ms - User: kishore
2025-06-27 12:52:04.606 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images - 200 null application/json; charset=utf-8 191.9205ms
2025-06-27 12:52:09.253 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - null null
2025-06-27 12:52:09.256 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:09.257 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - 204 null null 3.6833ms
2025-06-27 12:52:09.264 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 112
2025-06-27 12:52:09.267 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:09.275 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform)'
2025-06-27 12:52:09.281 +05:30 [INF] Route matched with {action = "ToggleLike", controller = "Like"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleLike(BloggingPlatform.Dto.Like.CreateLikeDto) on controller BloggingPlatform.Controllers.LikeController (bloggingplatform).
2025-06-27 12:52:09.306 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
FROM "Users" AS u
WHERE u."Id" = @__userId_0 AND NOT (u."IsDeleted") AND NOT (u."IsSuspended")
LIMIT 1
2025-06-27 12:52:09.312 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 12:52:09.343 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Boolean), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Likes" ("Id", "IsLiked", "PostId", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-06-27 12:52:09.347 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Like'.
2025-06-27 12:52:09.348 +05:30 [INF] Executed action BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform) in 64.7306ms
2025-06-27 12:52:09.349 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform)'
2025-06-27 12:52:09.350 +05:30 [INF] HTTP PUT /api/v1/likes responded 200 in 81.8100 ms
2025-06-27 12:52:09.353 +05:30 [INF] HTTP PUT /api/v1/likes responded 200 in 84ms - User: kishore
2025-06-27 12:52:09.357 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 200 null application/json; charset=utf-8 93.3542ms
2025-06-27 12:52:10.732 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 12:52:10.743 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:10.749 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform)'
2025-06-27 12:52:10.751 +05:30 [INF] Route matched with {action = "ToggleLike", controller = "Like"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleLike(BloggingPlatform.Dto.Like.CreateLikeDto) on controller BloggingPlatform.Controllers.LikeController (bloggingplatform).
2025-06-27 12:52:10.759 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
FROM "Users" AS u
WHERE u."Id" = @__userId_0 AND NOT (u."IsDeleted") AND NOT (u."IsSuspended")
LIMIT 1
2025-06-27 12:52:10.764 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 12:52:10.780 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
WHERE l."Id" = @__key_0
LIMIT 2
2025-06-27 12:52:10.798 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Likes" SET "IsLiked" = @p0
WHERE "Id" = @p1;
2025-06-27 12:52:10.803 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Like'.
2025-06-27 12:52:10.806 +05:30 [INF] Executed action BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform) in 51.9174ms
2025-06-27 12:52:10.808 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform)'
2025-06-27 12:52:10.810 +05:30 [INF] HTTP PUT /api/v1/likes responded 200 in 64.1509 ms
2025-06-27 12:52:10.812 +05:30 [INF] HTTP PUT /api/v1/likes responded 200 in 66ms - User: kishore
2025-06-27 12:52:10.814 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 200 null application/json; charset=utf-8 82.3541ms
2025-06-27 12:52:18.767 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 12:52:18.770 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:18.772 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 4.3116ms
2025-06-27 12:52:18.780 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 12:52:18.784 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:18.787 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 12:52:18.788 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:52:18.800 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 12:52:18.843 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:52:19.773 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 980.7434ms
2025-06-27 12:52:19.774 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 12:52:19.775 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 988.5943 ms
2025-06-27 12:52:19.777 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 990ms - User: kishore
2025-06-27 12:52:19.785 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1004.0081ms
2025-06-27 12:52:26.354 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 12:52:26.357 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:26.359 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 4.7136ms
2025-06-27 12:52:26.362 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 12:52:26.369 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:26.371 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 12:52:26.372 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:52:26.385 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 12:52:26.422 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 12:52:26.439 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 12:52:26.443 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 12:52:26.518 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 142.8491ms
2025-06-27 12:52:26.520 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 12:52:26.521 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 150.7543 ms
2025-06-27 12:52:26.523 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 152ms - User: kishore
2025-06-27 12:52:26.524 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 162.1112ms
2025-06-27 12:52:26.556 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments - null null
2025-06-27 12:52:26.565 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images - null null
2025-06-27 12:52:26.565 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes - null null
2025-06-27 12:52:26.565 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:26.569 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:26.574 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:26.576 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments - 204 null null 20.3484ms
2025-06-27 12:52:26.578 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images - 204 null null 13.0596ms
2025-06-27 12:52:26.580 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes - 204 null null 14.1572ms
2025-06-27 12:52:26.583 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images - null null
2025-06-27 12:52:26.586 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments - null null
2025-06-27 12:52:26.588 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes - null null
2025-06-27 12:52:26.590 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:26.592 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:26.594 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:52:26.595 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform)'
2025-06-27 12:52:26.596 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform)'
2025-06-27 12:52:26.597 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform)'
2025-06-27 12:52:26.597 +05:30 [INF] Route matched with {action = "GetImagesByPost", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetImagesByPost(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:52:26.598 +05:30 [INF] Route matched with {action = "GetCommentsByPost", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCommentsByPost(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:52:26.599 +05:30 [INF] Route matched with {action = "GetLikesByPostId", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetLikesByPostId(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:52:26.617 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 12:52:26.617 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 12:52:26.623 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
FROM "Comments" AS c
WHERE NOT (c."IsDeleted")
2025-06-27 12:52:26.625 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Comment, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:52:26.626 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 12:52:26.680 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Image, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:52:26.702 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform) in 100.7462ms
2025-06-27 12:52:26.704 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform)'
2025-06-27 12:52:26.708 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images responded 200 in 113.2750 ms
2025-06-27 12:52:26.712 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 12:52:26.714 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images responded 200 in 119ms - User: kishore
2025-06-27 12:52:26.717 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Like, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:52:26.720 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images - 200 null application/json; charset=utf-8 136.3399ms
2025-06-27 12:52:26.723 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform) in 110.4273ms
2025-06-27 12:52:26.739 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform)'
2025-06-27 12:52:26.748 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes responded 200 in 151.7284 ms
2025-06-27 12:52:26.753 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes responded 200 in 156ms - User: kishore
2025-06-27 12:52:26.762 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes - 200 null application/json; charset=utf-8 173.934ms
2025-06-27 12:52:26.883 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform) in 273.4826ms
2025-06-27 12:52:26.885 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform)'
2025-06-27 12:52:26.887 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments responded 200 in 291.4035 ms
2025-06-27 12:52:26.891 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments responded 200 in 295ms - User: kishore
2025-06-27 12:52:26.896 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments - 200 null application/json; charset=utf-8 309.6838ms
2025-06-27 12:53:12.129 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 12:53:12.138 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:53:12.139 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 10.6213ms
2025-06-27 12:53:12.146 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 12:53:12.149 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:53:12.151 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 12:53:12.152 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:53:12.198 +05:30 [INF] Executed DbCommand (41ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 12:53:12.232 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 12:53:12.251 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 12:53:12.256 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 12:53:12.328 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 173.6214ms
2025-06-27 12:53:12.336 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 12:53:12.340 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 190.2533 ms
2025-06-27 12:53:12.347 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 197ms - User: kishore
2025-06-27 12:53:12.352 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 205.8397ms
2025-06-27 12:53:12.454 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images - null null
2025-06-27 12:53:12.454 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes - null null
2025-06-27 12:53:12.454 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments - null null
2025-06-27 12:53:12.457 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:53:12.471 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:53:12.460 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:53:12.475 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images - 204 null null 21.2184ms
2025-06-27 12:53:12.476 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments - 204 null null 21.3539ms
2025-06-27 12:53:12.477 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes - 204 null null 23.0117ms
2025-06-27 12:53:12.483 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments - null null
2025-06-27 12:53:12.486 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images - null null
2025-06-27 12:53:12.493 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes - null null
2025-06-27 12:53:12.536 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:53:12.539 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:53:12.543 +05:30 [INF] CORS policy execution successful.
2025-06-27 12:53:12.545 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform)'
2025-06-27 12:53:12.546 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform)'
2025-06-27 12:53:12.547 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform)'
2025-06-27 12:53:12.558 +05:30 [INF] Route matched with {action = "GetLikesByPostId", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetLikesByPostId(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:53:12.554 +05:30 [INF] Route matched with {action = "GetImagesByPost", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetImagesByPost(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:53:12.548 +05:30 [INF] Route matched with {action = "GetCommentsByPost", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCommentsByPost(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 12:53:12.572 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 12:53:12.575 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Like, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:53:12.578 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform) in 12.2261ms
2025-06-27 12:53:12.579 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform)'
2025-06-27 12:53:12.581 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes responded 200 in 34.5338 ms
2025-06-27 12:53:12.581 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 12:53:12.583 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes responded 200 in 36ms - User: kishore
2025-06-27 12:53:12.589 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 12:53:12.612 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/likes - 200 null application/json; charset=utf-8 122.6094ms
2025-06-27 12:53:12.616 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 12:53:12.633 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
FROM "Comments" AS c
WHERE NOT (c."IsDeleted")
2025-06-27 12:53:12.642 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Image, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:53:12.646 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Comment, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 12:53:12.652 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform) in 83.0662ms
2025-06-27 12:53:12.656 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform)'
2025-06-27 12:53:12.657 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images responded 200 in 111.7912 ms
2025-06-27 12:53:12.664 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images responded 200 in 118ms - User: kishore
2025-06-27 12:53:12.668 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/images - 200 null application/json; charset=utf-8 182.2013ms
2025-06-27 12:53:12.901 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform) in 329.3926ms
2025-06-27 12:53:12.904 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform)'
2025-06-27 12:53:12.908 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments responded 200 in 363.3771 ms
2025-06-27 12:53:12.911 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments responded 200 in 366ms - User: kishore
2025-06-27 12:53:12.913 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d/comments - 200 null application/json; charset=utf-8 430.2951ms
2025-06-27 13:28:22.752 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/filter?status=Published&searchTerm=&sortOrder=asc&pageNumber=1&pageSize=10 - null null
2025-06-27 13:28:22.752 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/category/names - null null
2025-06-27 13:28:22.777 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:23.158 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:23.159 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/category/names - 204 null null 400.0666ms
2025-06-27 13:28:23.160 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/filter?status=Published&searchTerm=&sortOrder=asc&pageNumber=1&pageSize=10 - 204 null null 408.6709ms
2025-06-27 13:28:23.166 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/category/names - null null
2025-06-27 13:28:23.168 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/filter?status=Published&searchTerm=&sortOrder=asc&pageNumber=1&pageSize=10 - null null
2025-06-27 13:28:23.181 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:23.188 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:23.360 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:23'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 13:28:23.361 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:23'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 13:28:23.470 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:23'.
2025-06-27 13:28:23.470 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:23'.
2025-06-27 13:28:23.475 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform)'
2025-06-27 13:28:23.476 +05:30 [INF] HTTP GET /api/v1/category/names responded 404 in 293.5455 ms
2025-06-27 13:28:23.480 +05:30 [INF] HTTP GET /api/v1/category/names responded 404 in 296ms - User: Anonymous
2025-06-27 13:28:23.485 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/category/names - 404 0 null 319.0047ms
2025-06-27 13:28:23.496 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5147/api/v1/category/names, Response status code: 404
2025-06-27 13:28:23.558 +05:30 [INF] Route matched with {action = "GetFilteredPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetFilteredPosts(BloggingPlatform.Models.DTOs.PostQueryDto) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 13:28:23.783 +05:30 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 13:28:23.860 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 13:28:24.339 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform) in 778.9282ms
2025-06-27 13:28:24.341 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform)'
2025-06-27 13:28:24.343 +05:30 [INF] HTTP GET /api/v1/posts/filter responded 200 in 1151.3152 ms
2025-06-27 13:28:24.345 +05:30 [INF] HTTP GET /api/v1/posts/filter responded 200 in 1153ms - User: Anonymous
2025-06-27 13:28:24.348 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/filter?status=Published&searchTerm=&sortOrder=asc&pageNumber=1&pageSize=10 - 200 null application/json; charset=utf-8 1179.7865ms
2025-06-27 13:28:51.090 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/category/names - null null
2025-06-27 13:28:51.094 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:51.094 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/filter?status=Published&searchTerm=&sortOrder=asc&pageNumber=1&pageSize=10 - null null
2025-06-27 13:28:51.095 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/category/names - 204 null null 5.4602ms
2025-06-27 13:28:51.101 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:51.104 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/category/names - null null
2025-06-27 13:28:51.105 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/filter?status=Published&searchTerm=&sortOrder=asc&pageNumber=1&pageSize=10 - 204 null null 10.3694ms
2025-06-27 13:28:51.108 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:51.110 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/filter?status=Published&searchTerm=&sortOrder=asc&pageNumber=1&pageSize=10 - null null
2025-06-27 13:28:51.112 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:51'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 13:28:51.115 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:51.119 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:51'.
2025-06-27 13:28:51.120 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:51'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 13:28:51.121 +05:30 [INF] HTTP GET /api/v1/category/names responded 404 in 9.5537 ms
2025-06-27 13:28:51.126 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:51'.
2025-06-27 13:28:51.130 +05:30 [INF] HTTP GET /api/v1/category/names responded 404 in 18ms - User: Anonymous
2025-06-27 13:28:51.131 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform)'
2025-06-27 13:28:51.134 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/category/names - 404 0 null 29.8184ms
2025-06-27 13:28:51.135 +05:30 [INF] Route matched with {action = "GetFilteredPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetFilteredPosts(BloggingPlatform.Models.DTOs.PostQueryDto) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 13:28:51.138 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5147/api/v1/category/names, Response status code: 404
2025-06-27 13:28:51.150 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 13:28:51.174 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 13:28:51.532 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform) in 392.1989ms
2025-06-27 13:28:51.535 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform)'
2025-06-27 13:28:51.536 +05:30 [INF] HTTP GET /api/v1/posts/filter responded 200 in 415.9018 ms
2025-06-27 13:28:51.537 +05:30 [INF] HTTP GET /api/v1/posts/filter responded 200 in 417ms - User: Anonymous
2025-06-27 13:28:51.539 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/filter?status=Published&searchTerm=&sortOrder=asc&pageNumber=1&pageSize=10 - 200 null application/json; charset=utf-8 428.0799ms
2025-06-27 13:28:55.621 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/filter?userEmail=kishore@gmail.com&searchTerm=&status=Published&sortOrder=asc&pageNumber=1&pageSize=10 - null null
2025-06-27 13:28:55.625 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:55.626 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/filter?userEmail=kishore@gmail.com&searchTerm=&status=Published&sortOrder=asc&pageNumber=1&pageSize=10 - 204 null null 4.8602ms
2025-06-27 13:28:55.631 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/filter?userEmail=kishore@gmail.com&searchTerm=&status=Published&sortOrder=asc&pageNumber=1&pageSize=10 - null null
2025-06-27 13:28:55.633 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/filter?userEmail=kishore@gmail.com&searchTerm=&status=Draft&sortOrder=asc&pageNumber=1&pageSize=10 - null null
2025-06-27 13:28:55.637 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:55.640 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:55.642 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:55'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 13:28:55.643 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/filter?userEmail=kishore@gmail.com&searchTerm=&status=Draft&sortOrder=asc&pageNumber=1&pageSize=10 - 204 null null 9.8852ms
2025-06-27 13:28:55.646 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:55'.
2025-06-27 13:28:55.650 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/filter?userEmail=kishore@gmail.com&searchTerm=&status=Draft&sortOrder=asc&pageNumber=1&pageSize=10 - null null
2025-06-27 13:28:55.652 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform)'
2025-06-27 13:28:55.655 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:55.656 +05:30 [INF] Route matched with {action = "GetFilteredPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetFilteredPosts(BloggingPlatform.Models.DTOs.PostQueryDto) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 13:28:55.657 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:55'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 13:28:55.661 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:55'.
2025-06-27 13:28:55.663 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform)'
2025-06-27 13:28:55.666 +05:30 [INF] Route matched with {action = "GetFilteredPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetFilteredPosts(BloggingPlatform.Models.DTOs.PostQueryDto) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 13:28:55.682 +05:30 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 13:28:55.697 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 13:28:55.743 +05:30 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 13:28:55.775 +05:30 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-06-27 13:28:55.777 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform) in 108.2546ms
2025-06-27 13:28:55.778 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform)'
2025-06-27 13:28:55.780 +05:30 [INF] HTTP GET /api/v1/posts/filter responded 404 in 122.9405 ms
2025-06-27 13:28:55.782 +05:30 [INF] HTTP GET /api/v1/posts/filter responded 404 in 125ms - User: Anonymous
2025-06-27 13:28:55.786 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/filter?userEmail=kishore@gmail.com&searchTerm=&status=Draft&sortOrder=asc&pageNumber=1&pageSize=10 - 404 null text/plain; charset=utf-8 136.0972ms
2025-06-27 13:28:56.163 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform) in 504.8555ms
2025-06-27 13:28:56.166 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetFilteredPosts (bloggingplatform)'
2025-06-27 13:28:56.169 +05:30 [INF] HTTP GET /api/v1/posts/filter responded 200 in 527.3818 ms
2025-06-27 13:28:56.172 +05:30 [INF] HTTP GET /api/v1/posts/filter responded 200 in 530ms - User: Anonymous
2025-06-27 13:28:56.178 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/filter?userEmail=kishore@gmail.com&searchTerm=&status=Published&sortOrder=asc&pageNumber=1&pageSize=10 - 200 null application/json; charset=utf-8 547.169ms
2025-06-27 13:28:58.816 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/category/names - null null
2025-06-27 13:28:58.819 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:58.820 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/category/names - 204 null null 4.2972ms
2025-06-27 13:28:58.827 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/category/names - null null
2025-06-27 13:28:58.829 +05:30 [INF] CORS policy execution successful.
2025-06-27 13:28:58.831 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:58'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 13:28:58.835 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 07:58:58'.
2025-06-27 13:28:58.836 +05:30 [INF] HTTP GET /api/v1/category/names responded 404 in 5.5693 ms
2025-06-27 13:28:58.838 +05:30 [INF] HTTP GET /api/v1/category/names responded 404 in 7ms - User: Anonymous
2025-06-27 13:28:58.840 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/category/names - 404 0 null 13.5152ms
2025-06-27 13:28:58.844 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5147/api/v1/category/names, Response status code: 404
2025-06-27 14:48:11.895 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - null null
2025-06-27 14:48:11.917 +05:30 [INF] CORS policy execution failed.
2025-06-27 14:48:11.926 +05:30 [INF] Request origin http://localhost:64994 does not have permission to access the resource.
2025-06-27 14:48:11.931 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - 204 null null 36.0304ms
2025-06-27 14:48:16.182 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - null null
2025-06-27 14:48:16.202 +05:30 [INF] CORS policy execution failed.
2025-06-27 14:48:16.204 +05:30 [INF] Request origin http://localhost:64994 does not have permission to access the resource.
2025-06-27 14:48:16.205 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - 204 null null 22.7825ms
2025-06-27 14:48:23.794 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - null null
2025-06-27 14:48:23.804 +05:30 [INF] CORS policy execution failed.
2025-06-27 14:48:23.807 +05:30 [INF] Request origin http://localhost:64994 does not have permission to access the resource.
2025-06-27 14:48:23.811 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - 204 null null 16.7469ms
2025-06-27 14:49:03.468 +05:30 [INF] Application is shutting down...
2025-06-27 14:49:19.362 +05:30 [INF] User profile is available. Using 'C:\Users\imkis\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-27 14:49:19.657 +05:30 [FTL] Application startup exception
System.InvalidOperationException: The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the CORS policy by listing individual origins if credentials needs to be supported.
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddPolicy(String name, Action`1 configurePolicy)
   at Program.<>c.<<Main>$>b__0_4(CorsOptions options) in D:\training\BloggingPlatform\Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsService..ctor(IOptions`1 options, ILoggerFactory loggerFactory)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorInfoEx.GetService(IServiceProvider serviceProvider, Int32 parameterIndex)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2025-06-27 14:49:19.701 +05:30 [ERR] Hosting failed to start
System.InvalidOperationException: The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the CORS policy by listing individual origins if credentials needs to be supported.
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddPolicy(String name, Action`1 configurePolicy)
   at Program.<>c.<<Main>$>b__0_4(CorsOptions options) in D:\training\BloggingPlatform\Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsService..ctor(IOptions`1 options, ILoggerFactory loggerFactory)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorInfoEx.GetService(IServiceProvider serviceProvider, Int32 parameterIndex)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__14_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-06-27 14:51:37.088 +05:30 [INF] User profile is available. Using 'C:\Users\imkis\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-27 14:51:37.162 +05:30 [FTL] Application startup exception
System.InvalidOperationException: The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the CORS policy by listing individual origins if credentials needs to be supported.
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddPolicy(String name, Action`1 configurePolicy)
   at Program.<>c.<<Main>$>b__0_4(CorsOptions options) in D:\training\BloggingPlatform\Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsService..ctor(IOptions`1 options, ILoggerFactory loggerFactory)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorInfoEx.GetService(IServiceProvider serviceProvider, Int32 parameterIndex)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2025-06-27 14:51:37.195 +05:30 [ERR] Hosting failed to start
System.InvalidOperationException: The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the CORS policy by listing individual origins if credentials needs to be supported.
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddPolicy(String name, Action`1 configurePolicy)
   at Program.<>c.<<Main>$>b__0_4(CorsOptions options) in D:\training\BloggingPlatform\Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsService..ctor(IOptions`1 options, ILoggerFactory loggerFactory)
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorInfoEx.GetService(IServiceProvider serviceProvider, Int32 parameterIndex)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__14_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-06-27 14:52:13.807 +05:30 [INF] User profile is available. Using 'C:\Users\imkis\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-27 14:52:13.904 +05:30 [INF] Now listening on: http://localhost:5147
2025-06-27 14:52:13.908 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-06-27 14:52:13.909 +05:30 [INF] Hosting environment: Development
2025-06-27 14:52:13.910 +05:30 [INF] Content root path: D:\training\BloggingPlatform
2025-06-27 14:52:25.944 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - null null
2025-06-27 14:52:26.037 +05:30 [WRN] Failed to determine the https port for redirect.
2025-06-27 14:52:26.042 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:52:26.058 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/login - 204 null null 116.5171ms
2025-06-27 14:52:26.087 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5147/api/v1/login - application/json 47
2025-06-27 14:52:26.103 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:52:28.134 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform)'
2025-06-27 14:52:28.195 +05:30 [INF] Route matched with {action = "UserLogin", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[BloggingPlatform.Dto.User.UserLoginResponse]] UserLogin(BloggingPlatform.Models.DTOs.UserLoginRequest) on controller BloggingPlatform.Controllers.AuthenticationController (bloggingplatform).
2025-06-27 14:52:32.441 +05:30 [INF] Executed DbCommand (348ms) [Parameters=[@__email_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
FROM "Users" AS u
WHERE u."Email" = @__email_0 AND NOT (u."IsDeleted") AND NOT (u."IsSuspended")
LIMIT 1
2025-06-27 14:52:33.765 +05:30 [INF] Login attempt: kishore@gmail.com
2025-06-27 14:52:33.767 +05:30 [INF] User found: True
2025-06-27 14:52:33.769 +05:30 [INF] Password valid: True
2025-06-27 14:52:34.099 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?', @p4='?', @p5='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "Expires", "IsRevoked", "Token", "UserEmail", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-06-27 14:52:34.129 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Dto.User.UserLoginResponse'.
2025-06-27 14:52:34.169 +05:30 [INF] Executed action BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform) in 5963.0902ms
2025-06-27 14:52:34.172 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.AuthenticationController.UserLogin (bloggingplatform)'
2025-06-27 14:52:34.180 +05:30 [INF] HTTP POST /api/v1/login responded 200 in 8070.9116 ms
2025-06-27 14:52:34.188 +05:30 [INF] HTTP POST /api/v1/login responded 200 in 8080ms - User: Anonymous
2025-06-27 14:52:34.234 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5147/api/v1/login - 200 null application/json; charset=utf-8 8147.7608ms
2025-06-27 14:52:36.818 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 14:52:36.821 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:52:36.824 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.804ms
2025-06-27 14:52:36.828 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 14:52:36.830 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:52:36.884 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 14:52:36.894 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 14:52:37.249 +05:30 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-27 14:52:37.352 +05:30 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 14:52:37.502 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 14:52:38.552 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1655.8623ms
2025-06-27 14:52:38.556 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 14:52:38.558 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1726.9100 ms
2025-06-27 14:52:38.563 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1731ms - User: kishore
2025-06-27 14:52:38.567 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1738.8296ms
2025-06-27 14:53:55.662 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes/94a587f1-e0b6-4fbb-80f2-256193019d40 - null null
2025-06-27 14:53:55.665 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:53:55.670 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes/94a587f1-e0b6-4fbb-80f2-256193019d40 - 204 null null 7.7464ms
2025-06-27 14:53:55.674 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5147/api/v1/likes/94a587f1-e0b6-4fbb-80f2-256193019d40 - application/json 2
2025-06-27 14:53:55.677 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:53:55.682 +05:30 [INF] HTTP POST /api/v1/likes/94a587f1-e0b6-4fbb-80f2-256193019d40 responded 404 in 3.7209 ms
2025-06-27 14:53:55.685 +05:30 [INF] HTTP POST /api/v1/likes/94a587f1-e0b6-4fbb-80f2-256193019d40 responded 404 in 6ms - User: kishore
2025-06-27 14:53:55.688 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5147/api/v1/likes/94a587f1-e0b6-4fbb-80f2-256193019d40 - 404 0 null 13.989ms
2025-06-27 14:53:55.694 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: POST http://localhost:5147/api/v1/likes/94a587f1-e0b6-4fbb-80f2-256193019d40, Response status code: 404
2025-06-27 14:53:57.392 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes/e6088bad-1535-4557-8009-389f322928bb - null null
2025-06-27 14:53:57.396 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:53:57.402 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes/e6088bad-1535-4557-8009-389f322928bb - 204 null null 10.5213ms
2025-06-27 14:53:57.411 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5147/api/v1/likes/e6088bad-1535-4557-8009-389f322928bb - application/json 2
2025-06-27 14:53:57.418 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:53:57.420 +05:30 [INF] HTTP POST /api/v1/likes/e6088bad-1535-4557-8009-389f322928bb responded 404 in 0.5741 ms
2025-06-27 14:53:57.423 +05:30 [INF] HTTP POST /api/v1/likes/e6088bad-1535-4557-8009-389f322928bb responded 404 in 3ms - User: kishore
2025-06-27 14:53:57.428 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5147/api/v1/likes/e6088bad-1535-4557-8009-389f322928bb - 404 0 null 17.4063ms
2025-06-27 14:53:57.432 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: POST http://localhost:5147/api/v1/likes/e6088bad-1535-4557-8009-389f322928bb, Response status code: 404
2025-06-27 14:53:59.842 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 - null null
2025-06-27 14:53:59.851 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:53:59.855 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 - 204 null null 19.3324ms
2025-06-27 14:53:59.861 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 - null null
2025-06-27 14:53:59.869 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:53:59.871 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 14:53:59.882 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 14:54:00.051 +05:30 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-27 14:54:00.270 +05:30 [INF] Executed DbCommand (172ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 14:54:00.327 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 14:54:00.382 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 14:54:00.389 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 14:54:00.507 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 622.1976ms
2025-06-27 14:54:00.522 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 14:54:00.523 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 responded 200 in 652.8738 ms
2025-06-27 14:54:00.525 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 responded 200 in 654ms - User: kishore
2025-06-27 14:54:00.527 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40 - 200 null application/json; charset=utf-8 665.6007ms
2025-06-27 14:54:00.580 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments - null null
2025-06-27 14:54:00.582 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images - null null
2025-06-27 14:54:00.584 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes - null null
2025-06-27 14:54:00.586 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:00.590 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:00.595 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images - 204 null null 12.7919ms
2025-06-27 14:54:00.594 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments - 204 null null 13.1016ms
2025-06-27 14:54:00.592 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:00.600 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images - null null
2025-06-27 14:54:00.604 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments - null null
2025-06-27 14:54:00.605 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes - 204 null null 21.6706ms
2025-06-27 14:54:00.610 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:00.615 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:00.619 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes - null null
2025-06-27 14:54:00.620 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform)'
2025-06-27 14:54:00.622 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform)'
2025-06-27 14:54:00.627 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:00.637 +05:30 [INF] Route matched with {action = "GetImagesByPost", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetImagesByPost(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 14:54:00.638 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform)'
2025-06-27 14:54:00.639 +05:30 [INF] Route matched with {action = "GetCommentsByPost", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCommentsByPost(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 14:54:00.653 +05:30 [INF] Route matched with {action = "GetLikesByPostId", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetLikesByPostId(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 14:54:00.671 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 14:54:00.678 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Like, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 14:54:00.684 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform) in 22.5846ms
2025-06-27 14:54:00.688 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetLikesByPostId (bloggingplatform)'
2025-06-27 14:54:00.692 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes responded 200 in 54.2007 ms
2025-06-27 14:54:00.708 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes responded 200 in 69ms - User: kishore
2025-06-27 14:54:00.714 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/likes - 200 null application/json; charset=utf-8 94.822ms
2025-06-27 14:54:00.737 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 14:54:00.737 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 14:54:00.755 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 14:54:00.757 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
FROM "Comments" AS c
WHERE NOT (c."IsDeleted")
2025-06-27 14:54:00.765 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Comment, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 14:54:00.773 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform) in 117.734ms
2025-06-27 14:54:00.775 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetCommentsByPost (bloggingplatform)'
2025-06-27 14:54:00.777 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments responded 200 in 155.0776 ms
2025-06-27 14:54:00.780 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments responded 200 in 157ms - User: kishore
2025-06-27 14:54:00.786 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Image, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 14:54:00.787 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/comments - 200 null application/json; charset=utf-8 182.9179ms
2025-06-27 14:54:00.792 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform) in 149.5816ms
2025-06-27 14:54:00.799 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetImagesByPost (bloggingplatform)'
2025-06-27 14:54:00.801 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images responded 200 in 181.2037 ms
2025-06-27 14:54:00.849 +05:30 [INF] HTTP GET /api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images responded 200 in 187ms - User: kishore
2025-06-27 14:54:00.852 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/94a587f1-e0b6-4fbb-80f2-256193019d40/images - 200 null application/json; charset=utf-8 252.7297ms
2025-06-27 14:54:02.451 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - null null
2025-06-27 14:54:02.454 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:02.466 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - 204 null null 13.5781ms
2025-06-27 14:54:02.499 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 14:54:02.520 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:02.621 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform)'
2025-06-27 14:54:02.627 +05:30 [INF] Route matched with {action = "ToggleLike", controller = "Like"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleLike(BloggingPlatform.Dto.Like.CreateLikeDto) on controller BloggingPlatform.Controllers.LikeController (bloggingplatform).
2025-06-27 14:54:02.669 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
FROM "Users" AS u
WHERE u."Id" = @__userId_0 AND NOT (u."IsDeleted") AND NOT (u."IsSuspended")
LIMIT 1
2025-06-27 14:54:02.681 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 14:54:02.687 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Like'.
2025-06-27 14:54:02.689 +05:30 [INF] Executed action BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform) in 60.1455ms
2025-06-27 14:54:02.693 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform)'
2025-06-27 14:54:02.735 +05:30 [INF] HTTP PUT /api/v1/likes responded 200 in 120.6188 ms
2025-06-27 14:54:02.737 +05:30 [INF] HTTP PUT /api/v1/likes responded 200 in 122ms - User: kishore
2025-06-27 14:54:02.744 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 200 null application/json; charset=utf-8 244.4594ms
2025-06-27 14:54:03.439 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 112
2025-06-27 14:54:03.505 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:03.513 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform)'
2025-06-27 14:54:03.516 +05:30 [INF] Route matched with {action = "ToggleLike", controller = "Like"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleLike(BloggingPlatform.Dto.Like.CreateLikeDto) on controller BloggingPlatform.Controllers.LikeController (bloggingplatform).
2025-06-27 14:54:03.524 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
FROM "Users" AS u
WHERE u."Id" = @__userId_0 AND NOT (u."IsDeleted") AND NOT (u."IsSuspended")
LIMIT 1
2025-06-27 14:54:03.528 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 14:54:03.584 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
WHERE l."Id" = @__key_0
LIMIT 2
2025-06-27 14:54:03.657 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Likes" SET "IsLiked" = @p0
WHERE "Id" = @p1;
2025-06-27 14:54:03.660 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Like'.
2025-06-27 14:54:03.662 +05:30 [INF] Executed action BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform) in 142.5811ms
2025-06-27 14:54:03.666 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.LikeController.ToggleLike (bloggingplatform)'
2025-06-27 14:54:03.667 +05:30 [INF] HTTP PUT /api/v1/likes responded 200 in 157.5985 ms
2025-06-27 14:54:03.669 +05:30 [INF] HTTP PUT /api/v1/likes responded 200 in 159ms - User: kishore
2025-06-27 14:54:03.673 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 200 null application/json; charset=utf-8 233.9979ms
2025-06-27 14:54:07.082 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 14:54:07.088 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:07.089 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 7.3348ms
2025-06-27 14:54:07.092 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 14:54:07.096 +05:30 [INF] CORS policy execution successful.
2025-06-27 14:54:07.099 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 14:54:07.101 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 14:54:07.113 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 14:54:07.136 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 14:54:07.970 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 863.8925ms
2025-06-27 14:54:07.972 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 14:54:07.978 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 880.6909 ms
2025-06-27 14:54:07.982 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 884ms - User: kishore
2025-06-27 14:54:07.983 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 891.0498ms
2025-06-27 15:08:19.711 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:08:19.715 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:08:19.716 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 4.7002ms
2025-06-27 15:08:19.719 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:08:19.722 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:08:19.724 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:08:19.725 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:08:19.839 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:08:19.875 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:08:20.626 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 898.5995ms
2025-06-27 15:08:20.628 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:08:20.630 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 907.8813 ms
2025-06-27 15:08:20.631 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 908ms - User: kishore
2025-06-27 15:08:20.633 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 914.1287ms
2025-06-27 15:15:30.706 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:15:30.710 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:15:30.712 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.0174ms
2025-06-27 15:15:30.715 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:15:30.718 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:15:30.729 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:30'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:15:30.747 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:30'.
2025-06-27 15:15:30.748 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:30.749 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:15:30.811 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:15:30.832 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:15:30.839 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:15:30.841 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:15:30.843 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:30'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:15:30.846 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:30'.
2025-06-27 15:15:30.847 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:30.848 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:15:30.859 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:15:30.867 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:15:31.153 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 402.7464ms
2025-06-27 15:15:31.154 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:31.155 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 436.1932 ms
2025-06-27 15:15:31.158 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 438ms - User: Anonymous
2025-06-27 15:15:31.159 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 443.5337ms
2025-06-27 15:15:32.150 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1299.9484ms
2025-06-27 15:15:32.151 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:32.151 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1309.0129 ms
2025-06-27 15:15:32.154 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1311ms - User: Anonymous
2025-06-27 15:15:32.157 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1318.136ms
2025-06-27 15:15:33.625 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:15:33.630 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:15:33.635 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:33'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:15:33.644 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:33'.
2025-06-27 15:15:33.646 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:33.648 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:15:33.654 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:15:33.669 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:15:33.698 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:15:33.700 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:15:33.702 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:33'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:15:33.706 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:33'.
2025-06-27 15:15:33.707 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:33.708 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:15:33.752 +05:30 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:15:33.774 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:15:36.450 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 2800.5525ms
2025-06-27 15:15:36.451 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:36.452 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 2817.2467 ms
2025-06-27 15:15:36.453 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 2818ms - User: Anonymous
2025-06-27 15:15:36.458 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 2833.1836ms
2025-06-27 15:15:36.484 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 2773.4822ms
2025-06-27 15:15:36.490 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:36.490 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 2788.9710 ms
2025-06-27 15:15:36.492 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 2790ms - User: Anonymous
2025-06-27 15:15:36.493 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 2795.6175ms
2025-06-27 15:15:45.497 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:15:45.499 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:15:45.500 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 2.954ms
2025-06-27 15:15:45.505 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:15:45.507 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:15:45.508 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:45'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:15:45.510 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:45:45'.
2025-06-27 15:15:45.511 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:45.511 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:15:45.517 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:15:45.530 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:15:46.032 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 519.3523ms
2025-06-27 15:15:46.033 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:15:46.034 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 526.0819 ms
2025-06-27 15:15:46.035 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 527ms - User: Anonymous
2025-06-27 15:15:46.036 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 531.3756ms
2025-06-27 15:16:02.404 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:16:02.408 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:16:02.409 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.5156ms
2025-06-27 15:16:02.414 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:16:02.417 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:16:02.419 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:46:02'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:16:02.422 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:46:02'.
2025-06-27 15:16:02.426 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:16:02.428 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:16:02.439 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:16:02.448 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:16:03.251 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 817.4322ms
2025-06-27 15:16:03.255 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:16:03.258 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 839.8520 ms
2025-06-27 15:16:03.265 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 846ms - User: Anonymous
2025-06-27 15:16:03.271 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 857.8133ms
2025-06-27 15:16:11.597 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:16:11.600 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:16:11.601 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 3.7052ms
2025-06-27 15:16:11.603 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:16:11.605 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:16:11.606 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:46:11'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:16:11.608 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:46:11'.
2025-06-27 15:16:11.609 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:16:11.610 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:16:11.616 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:16:11.622 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:16:11.639 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:16:11.641 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:16:11.642 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:46:11'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:16:11.646 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:46:11'.
2025-06-27 15:16:11.646 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:16:11.647 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:16:11.653 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:16:11.659 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:16:13.475 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1826.2841ms
2025-06-27 15:16:13.476 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:16:13.478 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1835.8357 ms
2025-06-27 15:16:13.479 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1837ms - User: Anonymous
2025-06-27 15:16:13.481 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1841.1682ms
2025-06-27 15:16:13.507 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1896.3683ms
2025-06-27 15:16:13.509 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:16:13.511 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1905.4229 ms
2025-06-27 15:16:13.514 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1908ms - User: Anonymous
2025-06-27 15:16:13.516 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1912.2438ms
2025-06-27 15:27:14.121 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:27:14.123 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:27:14.124 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 3.0806ms
2025-06-27 15:27:14.127 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:27:14.129 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:27:14.131 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:57:14'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:27:14.134 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:57:14'.
2025-06-27 15:27:14.136 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:27:14.138 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:27:14.201 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:27:14.208 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:27:14.817 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 676.8602ms
2025-06-27 15:27:14.818 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:27:14.819 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 688.9259 ms
2025-06-27 15:27:14.820 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 689ms - User: Anonymous
2025-06-27 15:27:14.821 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 694.2758ms
2025-06-27 15:29:12.680 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:12.688 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:12.689 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 9.2061ms
2025-06-27 15:29:12.691 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:12.692 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:12.694 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:12'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:29:12.697 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:12'.
2025-06-27 15:29:12.697 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:12.698 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:29:12.705 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:29:12.715 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:29:12.934 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:12.936 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:12.937 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:12'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:29:12.943 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:12'.
2025-06-27 15:29:12.946 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:12.952 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:29:12.957 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:29:12.963 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:29:12.966 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 12.0347ms
2025-06-27 15:29:12.967 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:12.967 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:12.967 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 30.9270 ms
2025-06-27 15:29:12.969 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:12.970 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 33ms - User: Anonymous
2025-06-27 15:29:12.970 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:12'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:29:12.971 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 37.149ms
2025-06-27 15:29:12.972 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:12'.
2025-06-27 15:29:12.975 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:12.975 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:29:12.980 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:29:12.986 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:29:13.763 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1063.5555ms
2025-06-27 15:29:13.765 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:13.766 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1073.1305 ms
2025-06-27 15:29:13.767 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1074ms - User: Anonymous
2025-06-27 15:29:13.769 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1077.6286ms
2025-06-27 15:29:14.267 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1290.0724ms
2025-06-27 15:29:14.268 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:14.269 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1298.6405 ms
2025-06-27 15:29:14.270 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1299ms - User: Anonymous
2025-06-27 15:29:14.272 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1304.7694ms
2025-06-27 15:29:26.574 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:26.575 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:26.577 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:26.579 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:26.579 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 4.9816ms
2025-06-27 15:29:26.580 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 4.6421ms
2025-06-27 15:29:26.583 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:26.584 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:26.585 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:26'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:29:26.588 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:26'.
2025-06-27 15:29:26.589 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:26.590 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:29:26.597 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:29:26.606 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:29:26.610 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:26.612 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:26.613 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:26'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:29:26.615 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:26'.
2025-06-27 15:29:26.615 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:26.616 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:29:26.622 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:29:26.629 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:29:27.908 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1290.7703ms
2025-06-27 15:29:27.910 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:27.910 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1318.7148ms
2025-06-27 15:29:27.911 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1298.1046 ms
2025-06-27 15:29:27.911 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:27.912 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1299ms - User: Anonymous
2025-06-27 15:29:27.913 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1328.0046 ms
2025-06-27 15:29:27.914 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1304.0647ms
2025-06-27 15:29:27.915 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1330ms - User: Anonymous
2025-06-27 15:29:27.918 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1334.9085ms
2025-06-27 15:29:41.619 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:41.623 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:41.623 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 4.0607ms
2025-06-27 15:29:41.625 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:41.626 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:41.627 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:41'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:29:41.629 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:41'.
2025-06-27 15:29:41.630 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:41.631 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:29:41.637 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:29:41.647 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:29:41.686 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:41.692 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:41.700 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:41'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:29:41.705 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:41'.
2025-06-27 15:29:41.707 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:41.708 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:29:41.717 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:29:41.725 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:29:42.711 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1000.4131ms
2025-06-27 15:29:42.716 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:42.717 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1017.6735 ms
2025-06-27 15:29:42.721 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1021ms - User: Anonymous
2025-06-27 15:29:42.722 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1036.8982ms
2025-06-27 15:29:42.744 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1112.5124ms
2025-06-27 15:29:42.746 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:42.747 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1119.8929 ms
2025-06-27 15:29:42.748 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1120ms - User: Anonymous
2025-06-27 15:29:42.749 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1123.942ms
2025-06-27 15:29:59.561 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:59.565 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:59.566 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 4.9582ms
2025-06-27 15:29:59.568 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:59.569 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:59.570 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:59'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:29:59.572 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:59'.
2025-06-27 15:29:59.573 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:59.574 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:29:59.580 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:29:59.606 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:29:59.618 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:29:59.620 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:29:59.621 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:59'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:29:59.625 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 09:59:59'.
2025-06-27 15:29:59.625 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:29:59.626 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:29:59.633 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:29:59.642 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:30:00.577 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 949.9425ms
2025-06-27 15:30:00.578 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:30:00.579 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 958.1299 ms
2025-06-27 15:30:00.581 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 960ms - User: Anonymous
2025-06-27 15:30:00.589 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 970.5809ms
2025-06-27 15:30:00.643 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1068.485ms
2025-06-27 15:30:00.645 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:30:00.646 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1076.0725 ms
2025-06-27 15:30:00.647 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1077ms - User: Anonymous
2025-06-27 15:30:00.648 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1080.2985ms
2025-06-27 15:38:09.992 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:38:09.997 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:38:09.997 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.2923ms
2025-06-27 15:38:09.998 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:38:10.000 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:38:10.001 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:08:10'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:38:10.003 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:08:10'.
2025-06-27 15:38:10.005 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:38:10.006 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:38:10.120 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:38:10.128 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:38:10.133 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:38:10.135 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:38:10.136 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:08:10'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:38:10.138 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:08:10'.
2025-06-27 15:38:10.139 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:38:10.140 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:38:10.145 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:38:10.151 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:38:11.023 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1015.9122ms
2025-06-27 15:38:11.025 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:38:11.026 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1024.9343 ms
2025-06-27 15:38:11.027 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1026ms - User: Anonymous
2025-06-27 15:38:11.029 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1030.8252ms
2025-06-27 15:38:11.351 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 1210.1786ms
2025-06-27 15:38:11.355 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:38:11.357 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1220.4763 ms
2025-06-27 15:38:11.358 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1221ms - User: Anonymous
2025-06-27 15:38:11.359 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1226.1835ms
2025-06-27 15:38:51.555 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:38:51.559 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:38:51.561 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.1672ms
2025-06-27 15:38:51.564 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:38:51.567 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:38:51.568 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:08:51'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:38:51.571 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:08:51'.
2025-06-27 15:38:51.572 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:38:51.573 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:38:51.584 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:38:51.593 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:38:52.189 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 612.9246ms
2025-06-27 15:38:52.190 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:38:52.191 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 622.7755 ms
2025-06-27 15:38:52.192 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 623ms - User: Anonymous
2025-06-27 15:38:52.193 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 628.9786ms
2025-06-27 15:39:11.637 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:39:11.639 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:39:11.639 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 2.6625ms
2025-06-27 15:39:11.642 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:39:11.644 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:39:11.644 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:09:11'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:39:11.646 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:09:11'.
2025-06-27 15:39:11.647 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:39:11.648 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:39:11.664 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 15:39:11.688 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 15:39:11.705 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 15:39:11.710 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 15:39:11.724 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 73.9448ms
2025-06-27 15:39:11.725 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:39:11.725 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 81.1266 ms
2025-06-27 15:39:11.726 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 82ms - User: Anonymous
2025-06-27 15:39:11.727 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 85.8333ms
2025-06-27 15:39:18.097 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/comments - null null
2025-06-27 15:39:18.100 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:39:18.101 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/comments - 204 null null 3.6494ms
2025-06-27 15:39:18.105 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5147/api/v1/comments - application/json 137
2025-06-27 15:39:18.109 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:39:18.110 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:09:18'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:39:18.115 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:09:18'.
2025-06-27 15:39:18.120 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 15:39:18.129 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 15:39:18.130 +05:30 [INF] HTTP POST /api/v1/comments responded 401 in 20.1894 ms
2025-06-27 15:39:18.133 +05:30 [INF] HTTP POST /api/v1/comments responded 401 in 23ms - User: Anonymous
2025-06-27 15:39:18.136 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5147/api/v1/comments - 401 0 null 30.3935ms
2025-06-27 15:39:25.179 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/comments - null null
2025-06-27 15:39:25.187 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:39:25.190 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/comments - 204 null null 10.937ms
2025-06-27 15:39:25.200 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5147/api/v1/comments - application/json 137
2025-06-27 15:39:25.207 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:39:25.211 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:09:25'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:39:25.218 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:09:25'.
2025-06-27 15:39:25.220 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 15:39:25.223 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 15:39:25.226 +05:30 [INF] HTTP POST /api/v1/comments responded 401 in 15.6116 ms
2025-06-27 15:39:25.229 +05:30 [INF] HTTP POST /api/v1/comments responded 401 in 18ms - User: Anonymous
2025-06-27 15:39:25.233 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5147/api/v1/comments - 401 0 null 32.6094ms
2025-06-27 15:41:34.113 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:41:34.116 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:41:34.117 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 4.3407ms
2025-06-27 15:41:34.119 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:41:34.120 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:41:34.121 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:11:34'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:41:34.122 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:11:34'.
2025-06-27 15:41:34.123 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:41:34.123 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:41:34.131 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 15:41:34.140 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 15:41:34.145 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 15:41:34.146 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 15:41:34.325 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 200.4817ms
2025-06-27 15:41:34.330 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:41:34.331 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 210.7895 ms
2025-06-27 15:41:34.333 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 212ms - User: Anonymous
2025-06-27 15:41:34.334 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 215.2937ms
2025-06-27 15:43:31.151 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:43:31.158 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:43:31.161 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 9.6193ms
2025-06-27 15:43:31.178 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:43:31.188 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:43:31.203 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:13:31'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:43:31.217 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:13:31'.
2025-06-27 15:43:31.221 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:43:31.225 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:43:31.276 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:43:31.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:43:31.797 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 567.4641ms
2025-06-27 15:43:31.798 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:43:31.799 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 596.3829 ms
2025-06-27 15:43:31.801 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 598ms - User: Anonymous
2025-06-27 15:43:31.804 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 625.8405ms
2025-06-27 15:45:34.106 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:45:34.111 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:34.112 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.9982ms
2025-06-27 15:45:34.115 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:45:34.119 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:34.120 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:34'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:45:34.122 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:34'.
2025-06-27 15:45:34.123 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:45:34.124 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:45:34.147 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:45:34.164 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:45:34.774 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 647.5857ms
2025-06-27 15:45:34.775 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:45:34.776 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 656.5771 ms
2025-06-27 15:45:34.777 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 657ms - User: Anonymous
2025-06-27 15:45:34.779 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 663.4978ms
2025-06-27 15:45:44.346 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:45:44.349 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:44.350 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 3.3128ms
2025-06-27 15:45:44.352 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:45:44.355 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:44.356 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:44'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:45:44.358 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:44'.
2025-06-27 15:45:44.359 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:45:44.361 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:45:44.369 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 15:45:44.375 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 15:45:44.391 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 15:45:44.395 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 15:45:44.420 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 57.7624ms
2025-06-27 15:45:44.422 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:45:44.423 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 67.6032 ms
2025-06-27 15:45:44.426 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 69ms - User: Anonymous
2025-06-27 15:45:44.427 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 75.3673ms
2025-06-27 15:45:47.133 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - null null
2025-06-27 15:45:47.136 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:47.137 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - 204 null null 4.456ms
2025-06-27 15:45:47.153 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 15:45:47.156 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:47.159 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:47'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:45:47.162 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:47'.
2025-06-27 15:45:47.163 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 15:45:47.165 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 15:45:47.166 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 7.2999 ms
2025-06-27 15:45:47.168 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 9ms - User: Anonymous
2025-06-27 15:45:47.171 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 17.8379ms
2025-06-27 15:45:48.386 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 15:45:48.389 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:48.390 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:48'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:45:48.392 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:48'.
2025-06-27 15:45:48.394 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 15:45:48.395 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 15:45:48.396 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 5.9350 ms
2025-06-27 15:45:48.397 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 7ms - User: Anonymous
2025-06-27 15:45:48.399 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 12.2922ms
2025-06-27 15:45:49.028 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 15:45:49.034 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:49.035 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:49'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:45:49.038 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:49'.
2025-06-27 15:45:49.040 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 15:45:49.042 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 15:45:49.043 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 8.0576 ms
2025-06-27 15:45:49.044 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 9ms - User: Anonymous
2025-06-27 15:45:49.046 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 17.7334ms
2025-06-27 15:45:51.379 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 15:45:51.381 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:51.382 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 2.6184ms
2025-06-27 15:45:51.385 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 15:45:51.387 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:45:51.388 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:51'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:45:51.391 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:15:51'.
2025-06-27 15:45:51.392 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:45:51.393 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:45:51.424 +05:30 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 15:45:51.431 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 15:45:52.264 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 867.4036ms
2025-06-27 15:45:52.267 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 15:45:52.268 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 879.8079 ms
2025-06-27 15:45:52.270 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 881ms - User: Anonymous
2025-06-27 15:45:52.272 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 886.9475ms
2025-06-27 15:46:26.100 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:46:26.142 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:46:26.145 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 42.5283ms
2025-06-27 15:46:26.150 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:46:26.154 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:46:26.156 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:16:26'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:46:26.161 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:16:26'.
2025-06-27 15:46:26.162 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:46:26.163 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:46:26.183 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 15:46:26.239 +05:30 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 15:46:26.256 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 15:46:26.260 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 15:46:26.312 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 144.6824ms
2025-06-27 15:46:26.313 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:46:26.315 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 159.5173 ms
2025-06-27 15:46:26.317 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 161ms - User: Anonymous
2025-06-27 15:46:26.318 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 168.4144ms
2025-06-27 15:47:36.717 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:47:36.720 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:47:36.721 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 4.105ms
2025-06-27 15:47:36.726 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 15:47:36.729 +05:30 [INF] CORS policy execution successful.
2025-06-27 15:47:36.730 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:17:36'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 15:47:36.733 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:17:36'.
2025-06-27 15:47:36.736 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:47:36.738 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 15:47:36.751 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 15:47:36.781 +05:30 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 15:47:36.798 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 15:47:36.801 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 15:47:36.924 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 179.5501ms
2025-06-27 15:47:36.925 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 15:47:36.926 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 196.3734 ms
2025-06-27 15:47:36.927 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 197ms - User: Anonymous
2025-06-27 15:47:36.928 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 202.0879ms
2025-06-27 16:02:53.576 +05:30 [INF] User profile is available. Using 'C:\Users\imkis\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-27 16:02:53.703 +05:30 [INF] Now listening on: http://localhost:5147
2025-06-27 16:02:53.707 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-06-27 16:02:53.708 +05:30 [INF] Hosting environment: Development
2025-06-27 16:02:53.709 +05:30 [INF] Content root path: D:\training\BloggingPlatform
2025-06-27 16:03:01.700 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:03:01.824 +05:30 [WRN] Failed to determine the https port for redirect.
2025-06-27 16:03:01.828 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:03:01.864 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 166.4378ms
2025-06-27 16:03:01.893 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:03:01.911 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:03:03.904 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:33:03'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:03:03.918 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:33:03'.
2025-06-27 16:03:03.923 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:03:03.948 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 16:03:05.877 +05:30 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-27 16:03:06.190 +05:30 [INF] Executed DbCommand (44ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 16:03:06.358 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 16:03:06.374 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 16:03:06.382 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 16:03:06.495 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 2540.4466ms
2025-06-27 16:03:06.499 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:03:06.503 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 4579.4787 ms
2025-06-27 16:03:06.507 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 4584ms - User: Anonymous
2025-06-27 16:03:06.522 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 4629.3389ms
2025-06-27 16:04:02.635 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:04:02.638 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:04:02.639 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 3.9409ms
2025-06-27 16:04:02.641 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:04:02.644 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:04:02.648 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:34:02'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:04:02.672 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:34:02'.
2025-06-27 16:04:02.740 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:04:02.743 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 16:04:02.819 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 16:04:02.833 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 16:04:02.861 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 16:04:02.867 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 16:04:02.912 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 164.6088ms
2025-06-27 16:04:02.915 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:04:02.916 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 270.5890 ms
2025-06-27 16:04:02.920 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 274ms - User: Anonymous
2025-06-27 16:04:02.924 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 283.2085ms
2025-06-27 16:04:49.360 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:04:49.362 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:04:49.363 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 3.513ms
2025-06-27 16:04:49.387 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:04:49.395 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:04:49.401 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:34:49'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:04:49.406 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 10:34:49'.
2025-06-27 16:04:49.409 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:04:49.412 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 16:04:49.544 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 16:04:49.556 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 16:04:49.577 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 16:04:49.580 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 16:04:49.618 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 201.8765ms
2025-06-27 16:04:49.620 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:04:49.621 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 223.9896 ms
2025-06-27 16:04:49.623 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 225ms - User: Anonymous
2025-06-27 16:04:49.625 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 237.6796ms
2025-06-27 16:42:35.607 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:42:35.610 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:42:35.611 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 4.1591ms
2025-06-27 16:42:35.615 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:42:35.620 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:42:35.632 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:12:35'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:42:35.647 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:12:35'.
2025-06-27 16:42:35.651 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:42:35.652 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 16:42:35.784 +05:30 [INF] Executed DbCommand (50ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 16:42:35.796 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 16:42:35.805 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 16:42:35.819 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 16:42:35.871 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 212.4388ms
2025-06-27 16:42:35.872 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:42:35.873 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 241.5210 ms
2025-06-27 16:42:35.876 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 244ms - User: Anonymous
2025-06-27 16:42:35.878 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 262.7393ms
2025-06-27 16:43:55.375 +05:30 [INF] Application is shutting down...
2025-06-27 16:44:02.781 +05:30 [INF] User profile is available. Using 'C:\Users\imkis\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-06-27 16:44:02.878 +05:30 [INF] Now listening on: http://localhost:5147
2025-06-27 16:44:02.881 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-06-27 16:44:02.882 +05:30 [INF] Hosting environment: Development
2025-06-27 16:44:02.883 +05:30 [INF] Content root path: D:\training\BloggingPlatform
2025-06-27 16:44:12.248 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:44:12.301 +05:30 [WRN] Failed to determine the https port for redirect.
2025-06-27 16:44:12.304 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:44:12.310 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 63.5913ms
2025-06-27 16:44:12.327 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:44:12.338 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:44:12.421 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:14:12'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:44:12.437 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:14:12'.
2025-06-27 16:44:12.441 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:44:12.463 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 16:44:13.357 +05:30 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-27 16:44:13.565 +05:30 [INF] Executed DbCommand (30ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 16:44:13.707 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 16:44:13.742 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 16:44:13.755 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 16:44:13.911 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 1442.3505ms
2025-06-27 16:44:13.914 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:44:13.919 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 1571.2088 ms
2025-06-27 16:44:13.924 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 1577ms - User: Anonymous
2025-06-27 16:44:13.933 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 1606.8103ms
2025-06-27 16:45:09.972 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - null null
2025-06-27 16:45:09.978 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:45:09.981 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - 204 null null 8.9694ms
2025-06-27 16:45:09.992 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 16:45:10.003 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:45:10.007 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:10'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:45:10.011 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:10'.
2025-06-27 16:45:10.022 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 16:45:10.032 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 16:45:10.034 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 30.2751 ms
2025-06-27 16:45:10.040 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 33ms - User: Anonymous
2025-06-27 16:45:10.129 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 135.5314ms
2025-06-27 16:45:11.547 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 16:45:11.551 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:45:11.554 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:11'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:45:11.559 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:11'.
2025-06-27 16:45:11.562 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 16:45:11.565 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 16:45:11.568 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 15.5489 ms
2025-06-27 16:45:11.574 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 20ms - User: Anonymous
2025-06-27 16:45:11.580 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 33.5362ms
2025-06-27 16:45:19.689 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 16:45:19.696 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:45:19.699 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 9.6791ms
2025-06-27 16:45:19.730 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 16:45:19.737 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:45:19.740 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:19'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:45:19.745 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:19'.
2025-06-27 16:45:19.746 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 16:45:19.753 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 16:45:19.797 +05:30 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-27 16:45:19.885 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 16:45:19.942 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 16:45:20.753 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 997.4684ms
2025-06-27 16:45:20.754 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 16:45:20.755 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1016.6091 ms
2025-06-27 16:45:20.756 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 1017ms - User: Anonymous
2025-06-27 16:45:20.758 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 1027.4302ms
2025-06-27 16:45:23.315 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - null null
2025-06-27 16:45:23.318 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:45:23.319 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - 204 null null 4.4328ms
2025-06-27 16:45:23.323 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 16:45:23.326 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:45:23.327 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:23'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:45:23.331 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:23'.
2025-06-27 16:45:23.333 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 16:45:23.337 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 16:45:23.338 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 11.1521 ms
2025-06-27 16:45:23.341 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 14ms - User: Anonymous
2025-06-27 16:45:23.344 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 20.6156ms
2025-06-27 16:45:26.418 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 16:45:26.421 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:45:26.424 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:26'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:45:26.428 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:26'.
2025-06-27 16:45:26.429 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 16:45:26.430 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 16:45:26.433 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 9.4813 ms
2025-06-27 16:45:26.436 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 13ms - User: Anonymous
2025-06-27 16:45:26.441 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 22.3499ms
2025-06-27 16:45:27.775 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 16:45:27.780 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:45:27.783 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:27'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:45:27.788 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:15:27'.
2025-06-27 16:45:27.792 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 16:45:27.796 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 16:45:27.798 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 15.8866 ms
2025-06-27 16:45:27.804 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 21ms - User: Anonymous
2025-06-27 16:45:27.809 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 34.2585ms
2025-06-27 16:46:19.146 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 16:46:19.149 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:46:19.150 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 4.6906ms
2025-06-27 16:46:19.153 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 16:46:19.156 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:46:19.158 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:16:19'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:46:19.162 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:16:19'.
2025-06-27 16:46:19.164 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 16:46:19.166 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 16:46:19.254 +05:30 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 16:46:19.286 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 16:46:20.029 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 860.8048ms
2025-06-27 16:46:20.031 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 16:46:20.032 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 873.7700 ms
2025-06-27 16:46:20.035 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 876ms - User: Anonymous
2025-06-27 16:46:20.037 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 883.4954ms
2025-06-27 16:58:45.323 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 16:58:45.324 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:58:45.325 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 2.3228ms
2025-06-27 16:58:45.327 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 16:58:45.330 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:58:45.331 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:28:45'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:58:45.335 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:28:45'.
2025-06-27 16:58:45.337 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 16:58:45.338 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 16:58:45.448 +05:30 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 16:58:45.460 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 16:58:46.044 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 701.5319ms
2025-06-27 16:58:46.046 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 16:58:46.047 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 716.3335 ms
2025-06-27 16:58:46.050 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 718ms - User: Anonymous
2025-06-27 16:58:46.053 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 725.3885ms
2025-06-27 16:58:55.767 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:58:55.768 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:58:55.770 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 3.984ms
2025-06-27 16:58:55.778 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 16:58:55.783 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:58:55.785 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:28:55'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:58:55.789 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:28:55'.
2025-06-27 16:58:55.791 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:58:55.792 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 16:58:55.832 +05:30 [INF] Executed DbCommand (34ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 16:58:55.840 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 16:58:55.865 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 16:58:55.868 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 16:58:55.929 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 134.4532ms
2025-06-27 16:58:55.930 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 16:58:55.931 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 147.0247 ms
2025-06-27 16:58:55.933 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 148ms - User: Anonymous
2025-06-27 16:58:55.935 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 156.3179ms
2025-06-27 16:58:59.142 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/comments - null null
2025-06-27 16:58:59.146 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:58:59.148 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/comments - 204 null null 6.4897ms
2025-06-27 16:58:59.153 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5147/api/v1/comments - application/json 137
2025-06-27 16:58:59.157 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:58:59.158 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:28:59'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:58:59.163 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:28:59'.
2025-06-27 16:58:59.164 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 16:58:59.166 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 16:58:59.168 +05:30 [INF] HTTP POST /api/v1/comments responded 401 in 10.3186 ms
2025-06-27 16:58:59.171 +05:30 [INF] HTTP POST /api/v1/comments responded 401 in 12ms - User: Anonymous
2025-06-27 16:58:59.173 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5147/api/v1/comments - 401 0 null 19.9921ms
2025-06-27 16:59:08.950 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - null null
2025-06-27 16:59:08.954 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:59:08.956 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - 204 null null 5.5987ms
2025-06-27 16:59:08.963 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 16:59:08.969 +05:30 [INF] CORS policy execution successful.
2025-06-27 16:59:08.971 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:29:08'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 16:59:08.979 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:29:08'.
2025-06-27 16:59:08.981 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 16:59:08.983 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 16:59:08.985 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 13.7114 ms
2025-06-27 16:59:08.992 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 21ms - User: Anonymous
2025-06-27 16:59:08.995 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 32.0163ms
2025-06-27 17:14:43.074 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 17:14:43.078 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:14:43.080 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 5.2625ms
2025-06-27 17:14:43.085 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 17:14:43.088 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:14:43.089 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:44:43'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:14:43.094 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:44:43'.
2025-06-27 17:14:43.096 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:14:43.098 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:14:43.324 +05:30 [INF] Executed DbCommand (29ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 17:14:43.335 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 17:14:43.341 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 17:14:43.346 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 17:14:43.372 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 271.1889ms
2025-06-27 17:14:43.374 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:14:43.375 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 286.4250 ms
2025-06-27 17:14:43.377 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 287ms - User: Anonymous
2025-06-27 17:14:43.378 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 293.6636ms
2025-06-27 17:14:45.883 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - null null
2025-06-27 17:14:45.934 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:14:45.938 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - 204 null null 55.7202ms
2025-06-27 17:14:45.955 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 17:14:45.966 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:14:45.972 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:44:45'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:14:45.999 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:44:45'.
2025-06-27 17:14:46.000 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 17:14:46.007 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 17:14:46.009 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 37.7281 ms
2025-06-27 17:14:46.012 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 40ms - User: Anonymous
2025-06-27 17:14:46.015 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 59.8649ms
2025-06-27 17:15:20.016 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:15:20.018 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:20.019 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 3.2312ms
2025-06-27 17:15:20.023 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:15:20.028 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:20.031 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:20'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:15:20.038 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:20'.
2025-06-27 17:15:20.039 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:15:20.040 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:15:20.054 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:15:20.072 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:15:20.814 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 771.5249ms
2025-06-27 17:15:20.815 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:15:20.816 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 786.2736 ms
2025-06-27 17:15:20.818 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 788ms - User: Anonymous
2025-06-27 17:15:20.821 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 798.1611ms
2025-06-27 17:15:27.204 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:15:27.206 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:27.207 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 3.5174ms
2025-06-27 17:15:27.211 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:15:27.213 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:27.215 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:27'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:15:27.217 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:27'.
2025-06-27 17:15:27.218 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:15:27.220 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:15:27.243 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:15:27.291 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:15:27.958 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 736.958ms
2025-06-27 17:15:27.963 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:15:27.965 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 751.3046 ms
2025-06-27 17:15:27.971 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 756ms - User: Anonymous
2025-06-27 17:15:27.975 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 764.1235ms
2025-06-27 17:15:35.330 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:15:35.333 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:35.334 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 3.9623ms
2025-06-27 17:15:35.338 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:15:35.341 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:35.342 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:35'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:15:35.347 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:35'.
2025-06-27 17:15:35.350 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:15:35.351 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:15:35.379 +05:30 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:15:35.390 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:15:36.074 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 720.9807ms
2025-06-27 17:15:36.075 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:15:36.076 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 734.0569 ms
2025-06-27 17:15:36.077 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 734ms - User: Anonymous
2025-06-27 17:15:36.078 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 739.7449ms
2025-06-27 17:15:48.072 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - null null
2025-06-27 17:15:48.075 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:48.077 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/likes - 204 null null 5.388ms
2025-06-27 17:15:48.085 +05:30 [INF] Request starting HTTP/1.1 PUT http://localhost:5147/api/v1/likes - application/json 113
2025-06-27 17:15:48.090 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:48.092 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:48'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:15:48.097 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:48'.
2025-06-27 17:15:48.099 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-06-27 17:15:48.102 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-06-27 17:15:48.103 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 11.2262 ms
2025-06-27 17:15:48.108 +05:30 [INF] HTTP PUT /api/v1/likes responded 401 in 15ms - User: Anonymous
2025-06-27 17:15:48.113 +05:30 [INF] Request finished HTTP/1.1 PUT http://localhost:5147/api/v1/likes - 401 0 null 27.8513ms
2025-06-27 17:15:54.309 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 17:15:54.311 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:54.312 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 204 null null 3.3752ms
2025-06-27 17:15:54.316 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - null null
2025-06-27 17:15:54.318 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:54.320 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:54'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:15:54.323 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:54'.
2025-06-27 17:15:54.325 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:15:54.327 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:15:54.342 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__key_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Content", s."IsDeleted", s."PostStatus", s."Title", s."UserId", s."Id0", s."CreatedAt", s."Email", s."IsDeleted0", s."IsSuspended", s."Name", s."PasswordHash", s."Role", s."Status", s."SuspendedUntil", s."SuspensionReason", i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt", c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM (
    SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id" AS "Id0", u."CreatedAt", u."Email", u."IsDeleted" AS "IsDeleted0", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason"
    FROM "Posts" AS p
    INNER JOIN "Users" AS u ON p."UserId" = u."Id"
    WHERE p."Id" = @__key_0
    LIMIT 2
) AS s
LEFT JOIN "Images" AS i ON s."Id" = i."PostId"
LEFT JOIN "Comments" AS c ON s."Id" = c."PostId"
LEFT JOIN "Likes" AS l ON s."Id" = l."PostId"
ORDER BY s."Id", s."Id0", i."Id", c."Id"
2025-06-27 17:15:54.353 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
FROM "Images" AS i
WHERE NOT (i."IsDeleted")
2025-06-27 17:15:54.361 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT l."Id", l."IsLiked", l."PostId", l."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId"
FROM "Likes" AS l
INNER JOIN "Users" AS u ON l."UserId" = u."Id"
INNER JOIN "Posts" AS p ON l."PostId" = p."Id"
2025-06-27 17:15:54.365 +05:30 [INF] Executing OkObjectResult, writing value of type 'BloggingPlatform.Models.Post'.
2025-06-27 17:15:54.386 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 57.3579ms
2025-06-27 17:15:54.388 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:15:54.389 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 69.4505 ms
2025-06-27 17:15:54.391 +05:30 [INF] HTTP GET /api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d responded 200 in 71ms - User: Anonymous
2025-06-27 17:15:54.393 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/28cffe50-cbf0-401f-8be3-7991e4c4880d - 200 null application/json; charset=utf-8 77.2435ms
2025-06-27 17:15:56.388 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:15:56.393 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:56.394 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.3436ms
2025-06-27 17:15:56.397 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:15:56.401 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:15:56.402 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:56'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:15:56.406 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:45:56'.
2025-06-27 17:15:56.407 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:15:56.408 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:15:56.419 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:15:56.437 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:15:57.111 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 700.4617ms
2025-06-27 17:15:57.115 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:15:57.116 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 714.8612 ms
2025-06-27 17:15:57.119 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 717ms - User: Anonymous
2025-06-27 17:15:57.122 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 724.5781ms
2025-06-27 17:17:18.023 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:17:18.026 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:17:18.027 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 3.1075ms
2025-06-27 17:17:18.029 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:17:18.032 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:17:18.036 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:47:18'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:17:18.040 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:47:18'.
2025-06-27 17:17:18.042 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:17:18.044 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:17:18.054 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:17:18.088 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:17:18.632 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 585.7402ms
2025-06-27 17:17:18.634 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:17:18.634 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 598.6538 ms
2025-06-27 17:17:18.635 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 599ms - User: Anonymous
2025-06-27 17:17:18.637 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 607.1165ms
2025-06-27 17:18:13.494 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:18:13.497 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:18:13.498 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 4.0636ms
2025-06-27 17:18:13.502 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:18:13.506 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:18:13.509 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:48:13'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:18:13.513 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:48:13'.
2025-06-27 17:18:13.514 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:18:13.515 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:18:13.523 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:18:13.534 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:18:14.045 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 529.3305ms
2025-06-27 17:18:14.047 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:18:14.048 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 540.8301 ms
2025-06-27 17:18:14.052 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 545ms - User: Anonymous
2025-06-27 17:18:14.055 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 552.2702ms
2025-06-27 17:19:47.295 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:19:47.300 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:19:47.301 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 5.9046ms
2025-06-27 17:19:47.307 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:19:47.315 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:19:47.316 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:49:47'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:19:47.323 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:49:47'.
2025-06-27 17:19:47.330 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:19:47.334 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:19:47.429 +05:30 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:19:47.459 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:19:47.937 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 595.0553ms
2025-06-27 17:19:47.939 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:19:47.940 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 624.0865 ms
2025-06-27 17:19:47.941 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 625ms - User: Anonymous
2025-06-27 17:19:47.942 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 635.2667ms
2025-06-27 17:20:04.513 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/new - null null
2025-06-27 17:20:04.517 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:20:04.519 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/new - 204 null null 6.6712ms
2025-06-27 17:20:04.524 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/new - null null
2025-06-27 17:20:04.526 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:20:04.527 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:50:04'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:20:04.531 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:50:04'.
2025-06-27 17:20:04.532 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:20:04.533 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:20:04.540 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-06-27 17:20:04.575 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 38.8079ms
2025-06-27 17:20:04.578 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:20:04.579 +05:30 [INF] HTTP GET /api/v1/posts/new responded 400 in 51.9734 ms
2025-06-27 17:20:04.581 +05:30 [INF] HTTP GET /api/v1/posts/new responded 400 in 53ms - User: Anonymous
2025-06-27 17:20:04.585 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/new - 400 null application/problem+json; charset=utf-8 60.7343ms
2025-06-27 17:20:20.937 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:20:20.949 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:20:20.950 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 13.7872ms
2025-06-27 17:20:21.007 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:20:21.011 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:20:21.012 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:50:21'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:20:21.015 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:50:21'.
2025-06-27 17:20:21.019 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:20:21.021 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:20:21.057 +05:30 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:20:21.088 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:20:21.282 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/new - null null
2025-06-27 17:20:21.285 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:20:21.286 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts/new - 204 null null 3.6488ms
2025-06-27 17:20:21.296 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/new - null null
2025-06-27 17:20:21.299 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:20:21.301 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:50:21'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:20:21.305 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:50:21'.
2025-06-27 17:20:21.308 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:20:21.313 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:20:21.317 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-06-27 17:20:21.320 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 4.2115ms
2025-06-27 17:20:21.327 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:20:21.330 +05:30 [INF] HTTP GET /api/v1/posts/new responded 400 in 29.0016 ms
2025-06-27 17:20:21.333 +05:30 [INF] HTTP GET /api/v1/posts/new responded 400 in 32ms - User: Anonymous
2025-06-27 17:20:21.336 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/new - 400 null application/problem+json; charset=utf-8 40.0882ms
2025-06-27 17:20:21.681 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 656.5992ms
2025-06-27 17:20:21.683 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:20:21.684 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 672.0930 ms
2025-06-27 17:20:21.685 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 673ms - User: Anonymous
2025-06-27 17:20:21.687 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 680.1034ms
2025-06-27 17:20:22.562 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts/new - null null
2025-06-27 17:20:22.564 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:20:22.565 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:50:22'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:20:22.567 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:50:22'.
2025-06-27 17:20:22.568 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:20:22.569 +05:30 [INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:20:22.571 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-06-27 17:20:22.573 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform) in 2.9556ms
2025-06-27 17:20:22.574 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetPostById (bloggingplatform)'
2025-06-27 17:20:22.575 +05:30 [INF] HTTP GET /api/v1/posts/new responded 400 in 10.4112 ms
2025-06-27 17:20:22.576 +05:30 [INF] HTTP GET /api/v1/posts/new responded 400 in 11ms - User: Anonymous
2025-06-27 17:20:22.577 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts/new - 400 null application/problem+json; charset=utf-8 15.4911ms
2025-06-27 17:22:30.835 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:22:30.837 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:22:30.839 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 4.02ms
2025-06-27 17:22:30.841 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:22:30.843 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:22:30.844 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:52:30'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:22:30.847 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:52:30'.
2025-06-27 17:22:30.848 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:22:30.850 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:22:30.859 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:22:30.910 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:22:31.487 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 635.0486ms
2025-06-27 17:22:31.488 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:22:31.489 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 644.9102 ms
2025-06-27 17:22:31.490 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 646ms - User: Anonymous
2025-06-27 17:22:31.491 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 649.7326ms
2025-06-27 17:24:44.158 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:24:44.162 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:24:44.162 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 3.9507ms
2025-06-27 17:24:44.166 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:24:44.168 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:24:44.169 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:54:44'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:24:44.171 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:54:44'.
2025-06-27 17:24:44.172 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:24:44.173 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:24:44.199 +05:30 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:24:44.209 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:24:44.764 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 589.8996ms
2025-06-27 17:24:44.766 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:24:44.767 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 598.2229 ms
2025-06-27 17:24:44.769 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 599ms - User: Anonymous
2025-06-27 17:24:44.771 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 605.3321ms
2025-06-27 17:25:35.685 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - null null
2025-06-27 17:25:35.688 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:25:35.688 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5147/api/v1/posts - 204 null null 3.8092ms
2025-06-27 17:25:35.690 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5147/api/v1/posts - null null
2025-06-27 17:25:35.692 +05:30 [INF] CORS policy execution successful.
2025-06-27 17:25:35.693 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:55:35'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-06-27 17:25:35.696 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '26-06-2025 19:40:32', Current time (UTC): '27-06-2025 11:55:35'.
2025-06-27 17:25:35.697 +05:30 [INF] Executing endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:25:35.698 +05:30 [INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts() on controller BloggingPlatform.Controllers.v1.PostController (bloggingplatform).
2025-06-27 17:25:35.747 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Content", p."IsDeleted", p."PostStatus", p."Title", p."UserId", u."Id", u."CreatedAt", u."Email", u."IsDeleted", u."IsSuspended", u."Name", u."PasswordHash", u."Role", u."Status", u."SuspendedUntil", u."SuspensionReason", i0."Id", i0."Content", i0."IsDeleted", i0."Name", i0."PostId", i0."UploadedAt", c0."Id", c0."Content", c0."CreatedAt", c0."IsDeleted", c0."PostId", c0."Status", c0."UserId", l."Id", l."IsLiked", l."PostId", l."UserId"
FROM "Posts" AS p
INNER JOIN "Users" AS u ON p."UserId" = u."Id"
LEFT JOIN (
    SELECT i."Id", i."Content", i."IsDeleted", i."Name", i."PostId", i."UploadedAt"
    FROM "Images" AS i
    WHERE NOT (i."IsDeleted")
) AS i0 ON p."Id" = i0."PostId"
LEFT JOIN (
    SELECT c."Id", c."Content", c."CreatedAt", c."IsDeleted", c."PostId", c."Status", c."UserId"
    FROM "Comments" AS c
    WHERE NOT (c."IsDeleted")
) AS c0 ON p."Id" = c0."PostId"
LEFT JOIN "Likes" AS l ON p."Id" = l."PostId"
WHERE NOT (p."IsDeleted")
ORDER BY p."Id", u."Id", i0."Id", c0."Id"
2025-06-27 17:25:35.768 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BloggingPlatform.Models.Post, bloggingplatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-27 17:25:36.317 +05:30 [INF] Executed action BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform) in 617.3344ms
2025-06-27 17:25:36.319 +05:30 [INF] Executed endpoint 'BloggingPlatform.Controllers.v1.PostController.GetAllPosts (bloggingplatform)'
2025-06-27 17:25:36.320 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 627.1027 ms
2025-06-27 17:25:36.321 +05:30 [INF] HTTP GET /api/v1/posts responded 200 in 628ms - User: Anonymous
2025-06-27 17:25:36.324 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5147/api/v1/posts - 200 null application/json; charset=utf-8 633.6797ms
